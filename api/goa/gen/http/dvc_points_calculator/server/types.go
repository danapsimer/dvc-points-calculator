// Code generated by goa v3.8.2, DO NOT EDIT.
//
// dvcPointsCalculator HTTP server types
//
// Command:
// $ goa gen github.com/danapsimer/dvc-points-calculator/api/goa/design -o
// api/goa

package server

import (
	dvcpointscalculator "github.com/danapsimer/dvc-points-calculator/api/goa/gen/dvc_points_calculator"
	dvcpointscalculatorviews "github.com/danapsimer/dvc-points-calculator/api/goa/gen/dvc_points_calculator/views"
	goa "goa.design/goa/v3/pkg"
)

// DvcpointcalculatorResortResponseCollection is the type of the
// "dvcPointsCalculator" service "GetResorts" endpoint HTTP response body.
type DvcpointcalculatorResortResponseCollection []*DvcpointcalculatorResortResponse

// DvcpointcalculatorResortResponseResortOnlyCollection is the type of the
// "dvcPointsCalculator" service "GetResorts" endpoint HTTP response body.
type DvcpointcalculatorResortResponseResortOnlyCollection []*DvcpointcalculatorResortResponseResortOnly

// DvcpointcalculatorResortResponseResortUpdateCollection is the type of the
// "dvcPointsCalculator" service "GetResorts" endpoint HTTP response body.
type DvcpointcalculatorResortResponseResortUpdateCollection []*DvcpointcalculatorResortResponseResortUpdate

// GetResortResponseBody is the type of the "dvcPointsCalculator" service
// "GetResort" endpoint HTTP response body.
type GetResortResponseBody struct {
	// resort's code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// resort's name
	Name      *string                 `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	RoomTypes []*RoomTypeResponseBody `form:"roomTypes,omitempty" json:"roomTypes,omitempty" xml:"roomTypes,omitempty"`
}

// GetResortResponseBodyResortOnly is the type of the "dvcPointsCalculator"
// service "GetResort" endpoint HTTP response body.
type GetResortResponseBodyResortOnly struct {
	// resort's code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// resort's name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// GetResortResponseBodyResortUpdate is the type of the "dvcPointsCalculator"
// service "GetResort" endpoint HTTP response body.
type GetResortResponseBodyResortUpdate struct {
	// resort's name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// GetResortNotFoundResponseBody is the type of the "dvcPointsCalculator"
// service "GetResort" endpoint HTTP response body for the "not_found" error.
type GetResortNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DvcpointcalculatorResortResponse is used to define fields on response body
// types.
type DvcpointcalculatorResortResponse struct {
	// resort's code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// resort's name
	Name      *string             `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	RoomTypes []*RoomTypeResponse `form:"roomTypes,omitempty" json:"roomTypes,omitempty" xml:"roomTypes,omitempty"`
}

// RoomTypeResponse is used to define fields on response body types.
type RoomTypeResponse struct {
	// room type's code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// room type's name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// max room capacity
	Sleeps *int `form:"sleeps,omitempty" json:"sleeps,omitempty" xml:"sleeps,omitempty"`
	// number of bedrooms
	Bedrooms *int `form:"bedrooms,omitempty" json:"bedrooms,omitempty" xml:"bedrooms,omitempty"`
	// number of beds
	Beds *int `form:"beds,omitempty" json:"beds,omitempty" xml:"beds,omitempty"`
}

// DvcpointcalculatorResortResponseResortOnly is used to define fields on
// response body types.
type DvcpointcalculatorResortResponseResortOnly struct {
	// resort's code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// resort's name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// DvcpointcalculatorResortResponseResortUpdate is used to define fields on
// response body types.
type DvcpointcalculatorResortResponseResortUpdate struct {
	// resort's name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// RoomTypeResponseBody is used to define fields on response body types.
type RoomTypeResponseBody struct {
	// room type's code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// room type's name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// max room capacity
	Sleeps *int `form:"sleeps,omitempty" json:"sleeps,omitempty" xml:"sleeps,omitempty"`
	// number of bedrooms
	Bedrooms *int `form:"bedrooms,omitempty" json:"bedrooms,omitempty" xml:"bedrooms,omitempty"`
	// number of beds
	Beds *int `form:"beds,omitempty" json:"beds,omitempty" xml:"beds,omitempty"`
}

// NewDvcpointcalculatorResortResponseCollection builds the HTTP response body
// from the result of the "GetResorts" endpoint of the "dvcPointsCalculator"
// service.
func NewDvcpointcalculatorResortResponseCollection(res dvcpointscalculatorviews.DvcpointcalculatorResortCollectionView) DvcpointcalculatorResortResponseCollection {
	body := make([]*DvcpointcalculatorResortResponse, len(res))
	for i, val := range res {
		body[i] = marshalDvcpointscalculatorviewsDvcpointcalculatorResortViewToDvcpointcalculatorResortResponse(val)
	}
	return body
}

// NewDvcpointcalculatorResortResponseResortOnlyCollection builds the HTTP
// response body from the result of the "GetResorts" endpoint of the
// "dvcPointsCalculator" service.
func NewDvcpointcalculatorResortResponseResortOnlyCollection(res dvcpointscalculatorviews.DvcpointcalculatorResortCollectionView) DvcpointcalculatorResortResponseResortOnlyCollection {
	body := make([]*DvcpointcalculatorResortResponseResortOnly, len(res))
	for i, val := range res {
		body[i] = marshalDvcpointscalculatorviewsDvcpointcalculatorResortViewToDvcpointcalculatorResortResponseResortOnly(val)
	}
	return body
}

// NewDvcpointcalculatorResortResponseResortUpdateCollection builds the HTTP
// response body from the result of the "GetResorts" endpoint of the
// "dvcPointsCalculator" service.
func NewDvcpointcalculatorResortResponseResortUpdateCollection(res dvcpointscalculatorviews.DvcpointcalculatorResortCollectionView) DvcpointcalculatorResortResponseResortUpdateCollection {
	body := make([]*DvcpointcalculatorResortResponseResortUpdate, len(res))
	for i, val := range res {
		body[i] = marshalDvcpointscalculatorviewsDvcpointcalculatorResortViewToDvcpointcalculatorResortResponseResortUpdate(val)
	}
	return body
}

// NewGetResortResponseBody builds the HTTP response body from the result of
// the "GetResort" endpoint of the "dvcPointsCalculator" service.
func NewGetResortResponseBody(res *dvcpointscalculatorviews.DvcpointcalculatorResortView) *GetResortResponseBody {
	body := &GetResortResponseBody{
		Code: res.Code,
		Name: res.Name,
	}
	if res.RoomTypes != nil {
		body.RoomTypes = make([]*RoomTypeResponseBody, len(res.RoomTypes))
		for i, val := range res.RoomTypes {
			body.RoomTypes[i] = marshalDvcpointscalculatorviewsRoomTypeViewToRoomTypeResponseBody(val)
		}
	}
	return body
}

// NewGetResortResponseBodyResortOnly builds the HTTP response body from the
// result of the "GetResort" endpoint of the "dvcPointsCalculator" service.
func NewGetResortResponseBodyResortOnly(res *dvcpointscalculatorviews.DvcpointcalculatorResortView) *GetResortResponseBodyResortOnly {
	body := &GetResortResponseBodyResortOnly{
		Code: res.Code,
		Name: res.Name,
	}
	return body
}

// NewGetResortResponseBodyResortUpdate builds the HTTP response body from the
// result of the "GetResort" endpoint of the "dvcPointsCalculator" service.
func NewGetResortResponseBodyResortUpdate(res *dvcpointscalculatorviews.DvcpointcalculatorResortView) *GetResortResponseBodyResortUpdate {
	body := &GetResortResponseBodyResortUpdate{
		Name: res.Name,
	}
	return body
}

// NewGetResortNotFoundResponseBody builds the HTTP response body from the
// result of the "GetResort" endpoint of the "dvcPointsCalculator" service.
func NewGetResortNotFoundResponseBody(res *goa.ServiceError) *GetResortNotFoundResponseBody {
	body := &GetResortNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetResortPayload builds a dvcPointsCalculator service GetResort endpoint
// payload.
func NewGetResortPayload(resortCode string) *dvcpointscalculator.GetResortPayload {
	v := &dvcpointscalculator.GetResortPayload{}
	v.ResortCode = resortCode

	return v
}
