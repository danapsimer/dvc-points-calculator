// Code generated by goa v3.8.2, DO NOT EDIT.
//
// Points client HTTP transport
//
// Command:
// $ goa gen github.com/danapsimer/dvc-points-calculator/api/goa/design -o
// api/goa

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the Points service endpoint HTTP clients.
type Client struct {
	// GetResorts Doer is the HTTP client used to make requests to the GetResorts
	// endpoint.
	GetResortsDoer goahttp.Doer

	// GetResort Doer is the HTTP client used to make requests to the GetResort
	// endpoint.
	GetResortDoer goahttp.Doer

	// GetResortYear Doer is the HTTP client used to make requests to the
	// GetResortYear endpoint.
	GetResortYearDoer goahttp.Doer

	// GetPointChart Doer is the HTTP client used to make requests to the
	// GetPointChart endpoint.
	GetPointChartDoer goahttp.Doer

	// QueryStay Doer is the HTTP client used to make requests to the QueryStay
	// endpoint.
	QueryStayDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the Points service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		GetResortsDoer:      doer,
		GetResortDoer:       doer,
		GetResortYearDoer:   doer,
		GetPointChartDoer:   doer,
		QueryStayDoer:       doer,
		RestoreResponseBody: restoreBody,
		scheme:              scheme,
		host:                host,
		decoder:             dec,
		encoder:             enc,
	}
}

// GetResorts returns an endpoint that makes HTTP requests to the Points
// service GetResorts server.
func (c *Client) GetResorts() goa.Endpoint {
	var (
		decodeResponse = DecodeGetResortsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetResortsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetResortsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("Points", "GetResorts", err)
		}
		return decodeResponse(resp)
	}
}

// GetResort returns an endpoint that makes HTTP requests to the Points service
// GetResort server.
func (c *Client) GetResort() goa.Endpoint {
	var (
		decodeResponse = DecodeGetResortResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetResortRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetResortDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("Points", "GetResort", err)
		}
		return decodeResponse(resp)
	}
}

// GetResortYear returns an endpoint that makes HTTP requests to the Points
// service GetResortYear server.
func (c *Client) GetResortYear() goa.Endpoint {
	var (
		decodeResponse = DecodeGetResortYearResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetResortYearRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetResortYearDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("Points", "GetResortYear", err)
		}
		return decodeResponse(resp)
	}
}

// GetPointChart returns an endpoint that makes HTTP requests to the Points
// service GetPointChart server.
func (c *Client) GetPointChart() goa.Endpoint {
	var (
		decodeResponse = DecodeGetPointChartResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetPointChartRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetPointChartDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("Points", "GetPointChart", err)
		}
		return decodeResponse(resp)
	}
}

// QueryStay returns an endpoint that makes HTTP requests to the Points service
// QueryStay server.
func (c *Client) QueryStay() goa.Endpoint {
	var (
		encodeRequest  = EncodeQueryStayRequest(c.encoder)
		decodeResponse = DecodeQueryStayResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildQueryStayRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.QueryStayDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("Points", "QueryStay", err)
		}
		return decodeResponse(resp)
	}
}
