// Code generated by goa v3.8.2, DO NOT EDIT.
//
// Points endpoints
//
// Command:
// $ goa gen github.com/danapsimer/dvc-points-calculator/api/goa/design -o
// api/goa

package points

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "Points" service endpoints.
type Endpoints struct {
	GetResorts    goa.Endpoint
	GetResort     goa.Endpoint
	GetResortYear goa.Endpoint
	GetPointChart goa.Endpoint
	QueryStay     goa.Endpoint
}

// NewEndpoints wraps the methods of the "Points" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetResorts:    NewGetResortsEndpoint(s),
		GetResort:     NewGetResortEndpoint(s),
		GetResortYear: NewGetResortYearEndpoint(s),
		GetPointChart: NewGetPointChartEndpoint(s),
		QueryStay:     NewQueryStayEndpoint(s),
	}
}

// Use applies the given middleware to all the "Points" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetResorts = m(e.GetResorts)
	e.GetResort = m(e.GetResort)
	e.GetResortYear = m(e.GetResortYear)
	e.GetPointChart = m(e.GetPointChart)
	e.QueryStay = m(e.QueryStay)
}

// NewGetResortsEndpoint returns an endpoint function that calls the method
// "GetResorts" of service "Points".
func NewGetResortsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		res, view, err := s.GetResorts(ctx)
		if err != nil {
			return nil, err
		}
		vres := NewViewedResortResultCollection(res, view)
		return vres, nil
	}
}

// NewGetResortEndpoint returns an endpoint function that calls the method
// "GetResort" of service "Points".
func NewGetResortEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetResortPayload)
		res, view, err := s.GetResort(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedResortResult(res, view)
		return vres, nil
	}
}

// NewGetResortYearEndpoint returns an endpoint function that calls the method
// "GetResortYear" of service "Points".
func NewGetResortYearEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetResortYearPayload)
		res, err := s.GetResortYear(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedResortYearResult(res, "default")
		return vres, nil
	}
}

// NewGetPointChartEndpoint returns an endpoint function that calls the method
// "GetPointChart" of service "Points".
func NewGetPointChartEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetPointChartPayload)
		return s.GetPointChart(ctx, p)
	}
}

// NewQueryStayEndpoint returns an endpoint function that calls the method
// "QueryStay" of service "Points".
func NewQueryStayEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Stay)
		return s.QueryStay(ctx, p)
	}
}
